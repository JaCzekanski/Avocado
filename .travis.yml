sudo: false
dist: trusty
language: generic
cache:
  directories:
    - $HOME/.ccache


matrix:
  include:
    - os: linux
      env: COMPILER_NAME=clang CXX=clang++-3.6 CC=clang-3.6
      addons:
        apt:
          packages:
            - clang-3.6
            - libc++-dev
            - libc++abi-dev
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
    #- os: linux
    #  env: COMPILER_NAME=clang CXX=clang++-3.7 CC=clang-3.7
    #  addons:
    #    apt:
    #      packages:
    #        - clang-3.7
    #        - libc++-dev
    #        - libc++abi-dev
    #      sources:
    #        - ubuntu-toolchain-r-test
    #        - llvm-toolchain-precise-3.7
    #- os: linux
    #  env: COMPILER_NAME=clang CXX=clang++-3.8 CC=clang-3.8
    #  addons:
    #    apt:
    #      packages:
    #        - clang-3.8
    #        - g++-5
    #      sources:
    #        - ubuntu-toolchain-r-test
    #        - llvm-toolchain-precise-3.8
    #- os: linux
    #  env: COMPILER_NAME=clang CXX=clang++-3.9 CC=clang-3.9
    #  addons:
    #    apt:
    #      packages:
    #        - clang-3.9
    #        - g++-5
    #      sources:
    #        - ubuntu-toolchain-r-test
    #        - llvm-toolchain-trusty-3.9
    - os: linux
      env: COMPILER_NAME=clang CXX=clang++-4.0 CC=clang-4.0
      addons:
        apt:
          packages:
            - clang-4.0
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
    - os: linux
      env: COMPILER_NAME=clang CXX=clang++-5.0 CC=clang-5.0
      addons:
        apt:
          packages:
            - clang-5.0
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
    - os: linux
      env: COMPILER_NAME=gcc CXX=g++-6 CC=gcc-6
      addons:
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
    - os: linux
      env: COMPILER_NAME=gcc CXX=g++-7 CC=gcc-7
      addons:
        apt:
          packages:
            - g++-7
          sources:
            - ubuntu-toolchain-r-test

before_install:
  - export CC="ccache $CC"
  - export CXX="ccache $CXX"
  - export BASE=$PWD

  # Prevent ccache & clang from spitting "argument unused during compilation"
  - if [ $COMPILER_NAME == "clang" ]; then
      export CC="$CC -Qunused-arguments -fcolor-diagnostics";
      export CXX="$CXX -Qunused-arguments -fcolor-diagnostics";
    fi

  # Print sysmem & compiler info
  - uname -a
  - $CC --version
  - $CXX --version
  - ccache --version
  - make --version
  - echo $COMPILER_NAME
  - echo $CFLAGS
  - echo $CXXFLAGS

install:

  # Linux build does not support window and rendering for now
  # Build SDL2 from externals
  - mkdir -p build/externals/SDL2
  - export PREFIX=$PWD/build/externals/SDL2
  - export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
  - export PATH=$PATH:$PWD/build/externals/SDL2/bin
  - cd externals/SDL2
  - ./configure --prefix=$PREFIX
  - make -j3
  - make install

  - cd $BASE
  - export PREMAKE_VERSION=5.0.0-alpha12
  # Download and build premake5 from source
  # new versions have problems with build on travis-ci enviroment
  - wget https://github.com/premake/premake-core/releases/download/v`echo $PREMAKE_VERSION`/premake-`echo $PREMAKE_VERSION`-src.zip -O premake.zip
  - unzip -q premake.zip
  - cd premake-`echo $PREMAKE_VERSION`/build/gmake.unix
  - make config=release -j3
  - cd ../../..
  - mv premake-`echo $PREMAKE_VERSION`/bin/release/premake5 premake5

before_script:
  - cd $BASE
  - ./premake5 gmake

script:
  - make config=release_x64 -j3
  - ccache -s # For travis debugging

after_success:
  - ./build/release/avocado_test --success

  # TODO: download zip and run all tests
  - wget https://gist.github.com/JaCzekanski/d7a6e06295729a3f81bd9bd488e9d37d/raw/d5bc41278fd198ef5e4afceb35e0587aca7f2f60/gte_valid_0xc0ffee_50.log
  - ./build/release/avocado_autotest gte_valid_0xc0ffee_50.log || true

  - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh success $WEBHOOK_URL

after_failure:
  - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure $WEBHOOK_URL

before_deploy:
  - mkdir artifact

  # copy avocado binary and data directory
  - cp build\release\avocado artifact\avocado
  - cp -r data artifact/

  # remove .gitignore and asm directory
  - find artifact/ -name ".gitignore" -type f -delete
  - rm -rf artifact\data\asm\

  # make tar.gz archive
  - tar -zcvf avocado.tar.gz artifact/

notifications:
  - email: false
