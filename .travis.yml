sudo: false
language: generic

cache:
  apt: true

matrix:
  include:
    - os: linux
      env: COMPILER_NAME=clang CXX=clang++-3.8 CC=clang-3.8
      addons:
        apt:
          packages:
            - clang-3.8
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
# Problems with clang specific options and gcc
#    - os: linux
#      env: COMPILER_NAME=gcc CXX=g++-5 CC=gcc-5
#      addons:
#        apt:
#          packages:
#            - g++-5
#          sources:
#            - ubuntu-toolchain-r-test

before_install:
  - if [ "$COMPILER_NAME" == "clang++" ]; then export CXXFLAGS="-stdlib=libc++" && export LDFLAGS="-stdlib=libc++"; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then svn co --quiet $LIBCXXURL libcxx && pushd libcxx/lib && bash buildit && sudo cp ./libc++.so.1.0 /usr/lib/; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then sudo mkdir /usr/include/c++/v1 && pushd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then pushd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && popd && popd && popd; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then svn co --quiet $LIBCXXABIURL libcxxabi && pushd libcxxabi/lib && bash buildit && sudo cp ./libc++abi.so.1.0 /usr/lib/; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then pushd .. && sudo cp -r include/* /usr/include/c++/v1; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then pushd /usr/lib && sudo ln -sf libc++abi.so.1.0 libc++abi.so; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then sudo ln -sf libc++abi.so.1.0 libc++abi.so.1 && popd && popd && popd; fi


install:
  - export BASE=$PWD

  # Build SDL2 from externals
  - mkdir buildsdl
  - export PREFIX=$PWD/buildsdl
  - export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
  - export PATH=$PATH:$PWD/buildsdl/bin
  - cd externals/SDL2
  - ./configure --prefix=$PREFIX
  - make -j
  - make install

  - cd $BASE
  - export PREMAKE_VERSION=5.0.0-alpha5
  # Download and build premake5 from source
  # new versions have problems with build on travis-ci enviroment
  - wget https://github.com/premake/premake-core/releases/download/v`echo $PREMAKE_VERSION`/premake-`echo $PREMAKE_VERSION`-src.zip -O premake.zip
  - unzip premake.zip
  - cd premake-`echo $PREMAKE_VERSION`/build/gmake.unix
  - make config=release
  - cd ../../..
  - mv premake-`echo $PREMAKE_VERSION`/bin/release/premake5 premake5

before_script:
  - cd $BASE
  - ./premake5 gmake --headless

script:
  - make -j
