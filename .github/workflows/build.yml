name: build

on: [push]

jobs:
  linux_clang6:
    name: "Linux Clang6"
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Build
      run: .ci/linux/run-container.sh 6

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}

  linux_clang8:
    name: "Linux Clang8"
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Build
      run: .ci/linux/run-container.sh 8

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}

  linux_clang10:
    name: "Linux Clang10"
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Build
      run: .ci/linux/run-container.sh 10

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}

  linux_clang15:
    name: "Linux Clang15"
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Build
      run: .ci/linux/run-container.sh 15

    - name: Upload Github
      uses: kittaakos/upload-artifact-as-is@v0
      with: 
        path: upload/

    - name: Upload Builds
      run: .ci/deploy.sh ${{ secrets.DEPLOY_KEY }} upload/*

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}

  android:
    name: "Android"
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - name: Build
      run: .ci/android/run-container.sh
      env:
        KEYSTORE_KEY: ${{ secrets.KEYSTORE_KEY }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

    - name: Upload Github
      uses: kittaakos/upload-artifact-as-is@v0
      with:
        path: upload/

    - name: Upload Builds
      run: .ci/deploy.sh ${{ secrets.DEPLOY_KEY }} upload/*

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}

  macos:
    name: "macOS"
    runs-on: macOS-13
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    
    - name: Prepare cache
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-ccache-

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.3.1'

    - name: Install
      run: .ci/macos/install-dependencies.sh
    
    - name: Build
      run: .ci/macos/build.sh

    - name: Upload Github
      uses: kittaakos/upload-artifact-as-is@v0
      with:
        path: upload/

    - name: Upload Builds
      run: .ci/deploy.sh ${{ secrets.DEPLOY_KEY }} upload/*

    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.WEBHOOK_URL }}
# TODO: Add Windows